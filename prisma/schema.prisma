generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  address String @id
  secret  String

  Novel   Novel? @relation(fields: [novelId], references: [id])
  novelId Int?
  Task    Task[]
}

model Novel {
  id               Int    @id @default(autoincrement())
  title            String
  author           String
  intro            String
  notes            String
  reviewer_address String

  content   String
  separator Int[]

  progress  Float
  per_chars Int
  price     Int
  length    Int

  hash String

  tasks        Task[]
  participants User[]

  @@map("novels")
}

enum Status {
  PENDING
  IN_PROGRESS
  DONE
}

model Task {
  id     Int    @id @default(autoincrement())
  length Int
  start  Int
  end    Int
  status Status @default(PENDING)

  translated String
  trans_hash String

  participant        User     @relation(fields: [participantAddress], references: [address])
  participantAddress String
  Review             Review[]
  novel              Novel?   @relation(fields: [novel_id], references: [id])
  novel_id           Int?

  @@map("tasks")
}

model Review {
  id Int @id @default(autoincrement())

  comment Comment[]

  task_id Int
  task    Task @relation(fields: [task_id], references: [id])

  @@map("reviews")
}

model Comment {
  id Int @id @default(autoincrement())

  content  String
  Review   Review? @relation(fields: [reviewId], references: [id])
  reviewId Int?

  @@map("comments")
}
